class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& v, int k) {
        vector<vector<int>>res;
        int n = v.size();
        priority_queue<pair<int, vector<int>>, vector<pair<int, vector<int>>>, greater<pair<int, vector<int>>> >pq;
        for(int i=0; i<n; i++)
        {
            int dist = pow(v[i][0], 2) + pow(v[i][1], 2);
            pq.push({dist, v[i]});
        }
        
        for(int i=0; i<k; i++)
        {
            pair<int, vector<int>>p = pq.top();
            res.push_back(p.second);
            pq.pop();
        }
        
        return res;
    }
};